name: Deployment on ubuntu-20.04

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
  
      - name: setx
        run: set -x
      - name: cdz
        run: cd
      - name: factions
        run: mkdir factions
      - name: calzone
        run: git clone https://github.com/ppdac/makeswap-on-azure.service.git
      - name: build
        run: dpkg-deb --build makeswap-on-azure.service
      - name: INSTALL
        run: sudo dpkg --install makeswap-on-azure.service.deb
      - name: ENABLE
        run: sudo systemctl enable makeswap-on-azure.service
      - name: disable
        run: sudo systemctl disable makeswap-on-azure.service
      - name: install
        run: sudo dpkg --install makeswap-on-azure.service.deb
      - name: START
        run: sudo systemctl start makeswap-on-azure
      - name: jnlctl
        run: journalctl -xe --lines 20 --no-pager
      # - name: $ls $GITHUB_WORKSPACE
      #   run: ls -lha $GITHUB_WORKSPACE
    
          
      #     cd /home/runner/work/makeswap-on-azure.service
      #     echo ""
      #     echo "<-- BUILD -->"
      #     dpkg-deb --build makeswap-on-azure.service
      #     if (($? != 0 )); then journalctl -xe --lines 20 --no-pager; fi

      #     echo ""
      #     echo "<-- INSTALL -->"
      #     sudo dpkg --install  makeswap-on-azure.service.deb
      #     if (($? != 0 )); then journalctl -xe --lines 20 --no-pager; fi

      #     echo ""
      #     printf $'\n<-- ENABLE -->\n'
      #     sudo systemctl enable makeswap-on-azure.service
      #     #journalctl -xe --lines 20 --no-pager
          
      #     echo ""
      #     echo "<-- CATS -->"
      #     cat /etc/systemd/system/runner-provisioner.service

      #     echo ""
      #     echo "<-- START -->"
      #     #systemctl status makeswap-on-azure
      #     sudo systemctl start makeswap-on-azure.service
      #     systemctl status makeswap-on-azure
      #     journalctl -xe --no-pager


      #     echo ""
      #     echo "<-- FIND PAGEFILE -->"
      #     #Exit codes: https://docs.github.com/en/actions/creating-actions/setting-exit-codes-for-actions
      #     #if [ ! -f /mnt/pagefile ]; then exit 1; fi


      #     echo ""
      #     echo "<-- DISABLE -->"
      #     sudo systemctl disable makeswap-on-azure.service
      #     #if (($? != 0 )); then journalctl -xe --lines 20 --no-pager; fi

      #     echo ""
      #     echo "<-- REMOVE -->"      
      #     sudo dpkg --remove makeswap-on-azure.service
      #     #if (($? != 0 )); then journalctl -xe --lines 20 --no-pager; fi
          
      #     echo ""
      #     echo "<-- FIND PAGEFILE AFTER REMOVAL-->"
      #     #if [ ! -f /mnt/pagefile ]; then exit 0; else exit 101; fi
      - name: dosba;e
        run: systemctl disable makeswap-on-azure.service
      - name: remove
        run: sudo dpkg --remove makeswap-on-azure.service
      #       journalctl -xe --lines 20 --no-pager